name: Sync Changes to different CMS repos on PR Merge

on:
  pull_request:
    types: [closed]  # Triggers when a PR is closed
    branches:
      - dev  # Change this to your default branch if needed

env:
  BRANCH : dev # Change this to your default branch if needed
  SITECORE_REPO: contentstack-expert-services/migration-tool-sitecore # Change this to your sitecore repo
  CONTENTFUL_REPO: contentstack-expert-services/migration-tool-contentful # Change this to your contentful repo
  WORDPRESS_REPO: contentstack-expert-services/migration-tool-wordpress # Change this to your wordpress repo
  RSYNC_SITECORE_API_SRC_SERVICES_EXCLUDES: "--exclude 'src/services/contentful/' --exclude 'src/services/contentful.service.ts' --exclude 'src/services/wordpress.service.ts'" # Include only sitecore services
  RSYNC_CONTENTFUL_API_SRC_SERVICES_EXCLUDES: "--exclude 'src/services/wordpress.service.ts' --exclude 'src/services/sitecore.service.ts'" # Include only contentful services
  RSYNC_WORDPRESS_API_SRC_SERVICES_EXCLUDES: "--exclude 'src/services/contentful/' --exclude 'src/services/contentful.service.ts' --exclude 'src/services/sitecore.service.ts'" # Include only wordpress services
  RSYNC_SITECORE_UPLOAD_API_SRC_EXCLUDES: "--exclude 'controllers/wordpress/' --exclude 'controllers/contentful/' --exclude 'models/contentful.json' --exclude 'models/wordpress.json' --exclude  'services/contentful/' --exclude  'validators/aem/' --exclude  'validators/contentful/' --exclude  'validators/wordpress/'" # Include only sitecore upload-api
  RSYNC_CONTENTFUL_UPLOAD_API_SRC_EXCLUDES: "--exclude 'controllers/sitecore/' --exclude 'controllers/wordpress/' --exclude 'models/wordpress.json' --exclude  'validators/aem/' --exclude  'validators/sitecore/' --exclude  'validators/wordpress/'" # Include only contentful upload-api
  RSYNC_WORDPRESS_UPLOAD_API_SRC_EXCLUDES: "--exclude 'controllers/sitecore/' --exclude 'controllers/contentful/' --exclude 'models/contentful.json' --exclude  'services/contentful/' --exclude  'validators/aem/' --exclude  'validators/sitecore/' --exclude  'validators/contentful/'" # Include only wordpress upload-api
jobs:
  sync-on-merge:
    runs-on: ubuntu-latest

    permissions:
        contents: write
        pull-requests: write

    steps:
        -   name: Check if PR was merged
            id: check_merge
            run: |
                if [ "${{ github.event.pull_request.merged }}" = "true" ]; then
                    echo "PR was merged. Proceeding with sync."
                    echo "merged=true" >> $GITHUB_ENV
                else
                    echo "PR was closed without merging. Skipping sync."
                    echo "merged=false" >> $GITHUB_ENV
                fi
            shell: bash

        -   name: Checkout migration-v2
            if: env.merged == 'true'
            uses: actions/checkout@v4
            with:
                fetch-depth: 0  # Fetch full history to compare changes

        -   name: Detect changed files
            if: env.merged == 'true'
            id: file_changes
            uses: dorny/paths-filter@v3
            with:
                filters: |
                    api:
                        - 'api/**'
                    cli:
                        - 'cli/**'
                    ui:
                        - 'ui/**'
                    upload-api:
                        - 'upload-api/src/**'
                    migration-sitecore:
                        - 'upload-api/migration-sitecore/**'
                    migration-contentful:
                        - 'upload-api/migration-contentful/**'
                    migration-wordpress:
                        - 'upload-api/migration-wordpress/**'    
                    index:
                        - 'index.js'

        -   name: Setup Git
            if: env.merged == 'true'
            run: |
                git config --global user.name "github-actions"
                git config --global user.email "github-actions@github.com"

        -   name: Sync changes to sitecore-repo (if applicable)
            if: |
                env.merged == 'true' &&
                (
                    steps.file_changes.outputs.api == 'true' ||
                    steps.file_changes.outputs.ui == 'true' ||
                    steps.file_changes.outputs.upload-api == 'true' ||
                    steps.file_changes.outputs.migration-sitecore == 'true' ||
                    steps.file_changes.outputs.index == 'true'
                )
            run: |
                git clone https://x-access-token:${{ secrets.GH_PAT }}@github.com/${{ env.SITECORE_REPO }}.git
                cd migration-tool-sitecore
                git checkout -b sync-from-migration-v2-${{ github.event.pull_request.number }}
                git pull --rebase origin ${{ env.BRANCH }}

                # Cleanup step to remove unused or deleted file references
                echo "Cleaning up unused or deleted file references..."
                git fetch --all
                git reset --hard origin/${{ env.BRANCH }}
                git clean -fdX  # Remove untracked files and directories
                git gc --prune=now  # Garbage collect and prune unreachable objects

                # echo "Installing ESLint dependencies..."
                npm install --save-dev eslint eslint-plugin-import @eslint/js globals @typescript-eslint/eslint-plugin @typescript-eslint/parser

                if [ ! -f "eslint.config.cjs" ]; then
                    echo "Creating default ESLint config..."
                    cat <<EOL > eslint.config.cjs
                    const js = require("@eslint/js");
                    const globals = require("globals");
                    const tsPlugin = require("@typescript-eslint/eslint-plugin");
                    const importPlugin = require("eslint-plugin-import");

                module.exports = [
                js.configs.recommended,
                {
                    languageOptions: {
                    ecmaVersion: "latest",
                    sourceType: "module",
                    globals: globals.node,
                    parser: require("@typescript-eslint/parser"),
                    },
                    plugins: {
                    "@typescript-eslint": tsPlugin,
                    import: importPlugin,
                    },
                    rules: {
                    "no-unused-vars": "warn",
                    "no-console": "off",
                    "@typescript-eslint/no-var-requires": "off",
                    "no-prototype-builtins": "off",
                    "@typescript-eslint/no-explicit-any": "off",
                    "no-constant-condition": "off",
                    "no-constant-binary-expression": "off",
                    "import/no-unresolved": 'off',
                    }
                }
                ];
                EOL
                fi

                # # Remove unused imports and missing file references
                echo "Running ESLint to remove unused imports..."
                npm install eslint -g
                eslint . --fix --ignore-pattern "cli/**"

                rsync -av --delete ${{ env.RSYNC_SITECORE_API_SRC_SERVICES_EXCLUDES }} ../api/ ./api/
                rsync -av --delete ../ui/ ./ui/
                rsync -av --delete ${{ env.RSYNC_SITECORE_UPLOAD_API_SRC_EXCLUDES }} ../upload-api/src/ ./upload-api/src/
                rsync -av --delete ../upload-api/migration-sitecore/ ./upload-api/migration-sitecore/
                node remove-broken-imports.js
                if [ -z "$(git status --porcelain)" ]; then
                    echo "No changes to commit. Skipping push."
                    exit 0
                fi
                git add .
                git commit -m "Sync changes from migration-v2 PR #${{ github.event.pull_request.number }}"
                git push origin sync-from-migration-v2-${{ github.event.pull_request.number }}

        -   name: Create PR in sitecore-repo
            if: |
                env.merged == 'true' &&
                (
                    steps.file_changes.outputs.api == 'true' ||
                    steps.file_changes.outputs.ui == 'true' ||
                    steps.file_changes.outputs.upload-api == 'true' ||
                    steps.file_changes.outputs.migration-sitecore == 'true' ||
                    steps.file_changes.outputs.index == 'true'
                )
            run: |
                if [ -z "$(git status --porcelain)" ]; then
                    echo "No changes to commit. Skipping PR creation."
                    exit 0
                fi
                gh pr create --repo ${{ env.SITECORE_REPO }} \
                    --title "Sync changes from migration-v2 PR #${{ github.event.pull_request.number }}" \
                    --body "This PR syncs changes from migration-v2:\n${{ github.event.pull_request.html_url }}" \
                    --head sync-from-migration-v2-${{ github.event.pull_request.number }} \
                    --base ${{ env.BRANCH }}
            env:
                GH_TOKEN: ${{ secrets.GH_PAT }}

        -   name: Sync changes to contentful-repo (if applicable)
            if: |
                env.merged == 'true' &&
                (
                    steps.file_changes.outputs.api == 'true' ||
                    steps.file_changes.outputs.ui == 'true' ||
                    steps.file_changes.outputs.upload-api == 'true' ||
                    steps.file_changes.outputs.migration-contentful == 'true' ||
                    steps.file_changes.outputs.index == 'true'
                )
            run: |
                git clone https://x-access-token:${{ secrets.GH_PAT }}@github.com/${{ env.CONTENTFUL_REPO }}.git
                cd migration-tool-contentful
                git checkout -b sync-from-migration-v2-${{ github.event.pull_request.number }}
                git pull --rebase origin ${{ env.BRANCH }}

                # Cleanup step to remove unused or deleted file references
                echo "Cleaning up unused or deleted file references..."
                git fetch --all
                git reset --hard origin/${{ env.BRANCH }}
                git clean -fdX  # Remove untracked files and directories
                git gc --prune=now  # Garbage collect and prune unreachable objects

                echo "Installing ESLint dependencies..."
                npm install --save-dev eslint eslint-plugin-import @eslint/js globals @typescript-eslint/eslint-plugin @typescript-eslint/parser


                if [ ! -f "eslint.config.cjs" ]; then
                    echo "Creating default ESLint config..."
                    cat <<EOL > eslint.config.cjs
                const js = require("@eslint/js");
                const globals = require("globals");
                const tsPlugin = require("@typescript-eslint/eslint-plugin");
                const importPlugin = require("eslint-plugin-import");
                module.exports = [
                js.configs.recommended,
                {
                    languageOptions: {
                    ecmaVersion: "latest",
                    sourceType: "module",
                    globals: globals.node,
                    parser: require("@typescript-eslint/parser"),
                    },
                    plugins: {
                    "@typescript-eslint": tsPlugin,
                    import: importPlugin,
                    },
                    rules: {
                    "no-unused-vars": "warn",
                    "no-console": "off",
                    "@typescript-eslint/no-var-requires": "off",
                    "no-prototype-builtins": "off",
                    "@typescript-eslint/no-explicit-any": "off",
                    "no-constant-condition": "off",
                    "no-constant-binary-expression": "off",
                    "import/no-unresolved": 'off',
                    }
                }
                ];
                EOL
                fi


                # Remove unused imports and missing file references
                echo "Running ESLint to remove unused imports..."
                npm install eslint -g
                eslint . --fix

                echo "Running autoflake to remove unused imports..."
                pip install autoflake
                autoflake --remove-all-unused-imports --recursive --in-place .

                echo "Running ts-prune to remove unused file references..."
                npm install -g ts-prune
                ts-prune | awk '{print $1}' | xargs rm -f

                rsync -av --delete ${{ env.RSYNC_CONTENTFUL_API_SRC_SERVICES_EXCLUDES }} ../api/ ./api/
                rsync -av --delete ../ui/ ./ui/
                rsync -av --delete ${{ env.RSYNC_CONTENTFUL_UPLOAD_API_SRC_EXCLUDES }} ../upload-api/src/ ./upload-api/src/
                rsync -av --delete ../upload-api/migration-contentful/ ./upload-api/migration-contentful/
                node remove-broken-imports.js
                if [ -z "$(git status --porcelain)" ]; then
                    echo "No changes to commit. Skipping push."
                    exit 0
                fi
                git add .
                git commit -m "Sync changes from migration-v2 PR #${{ github.event.pull_request.number }}"
                git push origin sync-from-migration-v2-${{ github.event.pull_request.number }}

        -   name: Create PR in contentful-repo
            if: |
                env.merged == 'true' &&
                (
                    steps.file_changes.outputs.api == 'true' ||
                    steps.file_changes.outputs.ui == 'true' ||
                    steps.file_changes.outputs.upload-api == 'true' ||
                    steps.file_changes.outputs.migration-contentful == 'true' ||
                    steps.file_changes.outputs.index == 'true'
                )
            run: |
                if [ -z "$(git status --porcelain)" ]; then
                    echo "No changes to commit. Skipping PR creation."
                    exit 0
                fi
                gh pr create --repo ${{ env.CONTENTFUL_REPO }} \
                    --title "Sync changes from migration-v2 PR #${{ github.event.pull_request.number }}" \
                    --body "This PR syncs changes from migration-v2:\n${{ github.event.pull_request.html_url }}" \
                    --head sync-from-migration-v2-${{ github.event.pull_request.number }} \
                    --base ${{ env.BRANCH }}
            env:
                    GH_TOKEN: ${{ secrets.GH_PAT }}

        -   name: Sync changes to wordpress-repo (if applicable)
            if: |
                env.merged == 'true' &&
                (
                    steps.file_changes.outputs.api == 'true' ||
                    steps.file_changes.outputs.ui == 'true' ||
                    steps.file_changes.outputs.upload-api == 'true' ||
                    steps.file_changes.outputs.migration-wordpress == 'true' ||
                    steps.file_changes.outputs.index == 'true'
                )
            run: |
                git clone https://x-access-token:${{ secrets.GH_PAT }}@github.com/${{ env.WORDPRESS_REPO }}.git
                cd migration-tool-wordpress
                git checkout -b sync-from-migration-v2-${{ github.event.pull_request.number }}
                git pull --rebase origin ${{ env.BRANCH }}

                # Cleanup step to remove unused or deleted file references
                echo "Cleaning up unused or deleted file references..."
                git fetch --all
                git reset --hard origin/${{ env.BRANCH }}
                git clean -fdX  # Remove untracked files and directories
                git gc --prune=now  # Garbage collect and prune unreachable objects

                echo "Installing ESLint dependencies..."
                npm install --save-dev eslint eslint-plugin-import @eslint/js globals @typescript-eslint/eslint-plugin @typescript-eslint/parser


                if [ ! -f "eslint.config.cjs" ]; then
                    echo "Creating default ESLint config..."
                    cat <<EOL > eslint.config.cjs
                const js = require("@eslint/js");
                const globals = require("globals");
                const tsPlugin = require("@typescript-eslint/eslint-plugin");
                const importPlugin = require("eslint-plugin-import");
                module.exports = [
                js.configs.recommended,
                {
                    languageOptions: {
                    ecmaVersion: "latest",
                    sourceType: "module",
                    globals: globals.node,
                    parser: require("@typescript-eslint/parser"),
                    },
                    plugins: {
                    "@typescript-eslint": tsPlugin,
                    import: importPlugin,
                    },
                    rules: {
                    "no-unused-vars": "warn",
                    "no-console": "off",
                    "@typescript-eslint/no-var-requires": "off",
                    "no-prototype-builtins": "off",
                    "@typescript-eslint/no-explicit-any": "off",
                    "no-constant-condition": "off",
                    "no-constant-binary-expression": "off",
                    "import/no-unresolved": 'off',
                    }
                }
                ];
                EOL
                fi

                # Remove unused imports and missing file references
                echo "Running ESLint to remove unused imports..."
                npm install eslint -g
                eslint . --fix

                echo "Running autoflake to remove unused imports..."
                pip install autoflake
                autoflake --remove-all-unused-imports --recursive --in-place .

                echo "Running ts-prune to remove unused file references..."
                npm install -g ts-prune
                ts-prune | awk '{print $1}' | xargs rm -f

                rsync -av --delete ${{ env.RSYNC_WORDPRESS_API_SRC_SERVICES_EXCLUDES }} ../api/ ./api/
                rsync -av --delete ../ui/ ./ui/
                rsync -av --delete ${{ env.RSYNC_WORDPRESS_UPLOAD_API_SRC_EXCLUDES }} ../upload-api/src/ ./upload-api/src/
                rsync -av --delete ../upload-api/migration-wordpress/ ./upload-api/migration-wordpress/
                node remove-broken-imports.js
                if [ -z "$(git status --porcelain)" ]; then
                    echo "No changes to commit. Skipping push."
                    exit 0
                fi
                git add .
                git commit -m "Sync changes from migration-v2 PR #${{ github.event.pull_request.number }}"
                git push origin sync-from-migration-v2-${{ github.event.pull_request.number }}

        -   name: Create PR in wordpress-repo
            if: |
                env.merged == 'true' &&
                (
                    steps.file_changes.outputs.api == 'true' ||
                    steps.file_changes.outputs.ui == 'true' ||
                    steps.file_changes.outputs.upload-api == 'true' ||
                    steps.file_changes.outputs.migration-wordpress == 'true' ||
                    steps.file_changes.outputs.index == 'true'
                )
            run: |
                if [ -z "$(git status --porcelain)" ]; then
                    echo "No changes to commit. Skipping PR creation."
                    exit 0
                fi
                gh pr create --repo ${{ env.WORDPRESS_REPO }} \
                    --title "Sync changes from migration-v2 PR #${{ github.event.pull_request.number }}" \
                    --body "This PR syncs changes from migration-v2:\n${{ github.event.pull_request.html_url }}" \
                    --head sync-from-migration-v2-${{ github.event.pull_request.number }} \
                    --base ${{ env.BRANCH }}
            env:
                    GH_TOKEN: ${{ secrets.GH_PAT }}
